name: CMake

on:
  workflow_dispatch:
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # show all errors for each platform (vs. cancel jobs on error)
      matrix:
        os: [ ubuntu-latest, windows-2019, macOS-latest ]

    steps:
    
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
        
    - name: Install Dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get install --no-install-recommends -y libx11-dev x11-xserver-utils libxrandr-dev libxinerama-dev libxcursor-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel 4
      
    - name: Compress
      if: runner.os == 'Linux'
      run: |
        cd ${{github.workspace}}/build/simple-mts-main_artefacts
        tar -caf simple-mts-main.tar.xz Release

